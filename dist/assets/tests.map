{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","minh-ha-foods/tests/about-section/model.jshint.lint-test.js","minh-ha-foods/tests/admin-route/about-sections/awards/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/about-sections/history/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/about-sections/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/about-sections/serializer.jshint.lint-test.js","minh-ha-foods/tests/admin-route/about-sections/why-us/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/chef-section/categories/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/chef-section/dishes/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/chef-section/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/contact/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/news-section/post/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/news-section/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/news-section/serializer.jshint.lint-test.js","minh-ha-foods/tests/admin-route/product-sections/categories/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/product-sections/category/products/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/product-sections/category/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/product-sections/products/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/product-sections/route.jshint.lint-test.js","minh-ha-foods/tests/admin-route/route.jshint.lint-test.js","minh-ha-foods/tests/ajax/service.jshint.lint-test.js","minh-ha-foods/tests/app.jshint.lint-test.js","minh-ha-foods/tests/application/adapter.jshint.lint-test.js","minh-ha-foods/tests/application/route.jshint.lint-test.js","minh-ha-foods/tests/application/serializer.jshint.lint-test.js","minh-ha-foods/tests/auth/service.jshint.lint-test.js","minh-ha-foods/tests/auth/storage.jshint.lint-test.js","minh-ha-foods/tests/award/model.jshint.lint-test.js","minh-ha-foods/tests/category/model.jshint.lint-test.js","minh-ha-foods/tests/change-password/route.jshint.lint-test.js","minh-ha-foods/tests/chef-category/model.jshint.lint-test.js","minh-ha-foods/tests/chef-category/serializer.jshint.lint-test.js","minh-ha-foods/tests/chef-dishes/route.jshint.lint-test.js","minh-ha-foods/tests/chef-section/model.jshint.lint-test.js","minh-ha-foods/tests/components/admin-page/about-section/component.jshint.lint-test.js","minh-ha-foods/tests/components/admin-page/product-section/component.jshint.lint-test.js","minh-ha-foods/tests/components/all-forms/change-password/component.jshint.lint-test.js","minh-ha-foods/tests/components/all-forms/sign-in-form/component.jshint.lint-test.js","minh-ha-foods/tests/components/all-forms/sign-up-form/component.jshint.lint-test.js","minh-ha-foods/tests/components/award-form/component.jshint.lint-test.js","minh-ha-foods/tests/components/banner-image/component.jshint.lint-test.js","minh-ha-foods/tests/components/category-form/component.jshint.lint-test.js","minh-ha-foods/tests/components/hamburger-menu/component.jshint.lint-test.js","minh-ha-foods/tests/components/home-page/about-section/component.jshint.lint-test.js","minh-ha-foods/tests/components/home-page/chef-section/component.jshint.lint-test.js","minh-ha-foods/tests/components/home-page/component.jshint.lint-test.js","minh-ha-foods/tests/components/home-page/contact-page/component.jshint.lint-test.js","minh-ha-foods/tests/components/home-page/image-row/component.jshint.lint-test.js","minh-ha-foods/tests/components/home-page/news-section/component.jshint.lint-test.js","minh-ha-foods/tests/components/home-page/product-section/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-fields/email-input/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-fields/password-confirmation-input/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-fields/password-input/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-fields/section-inputs/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-form/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-form/inputs-section/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-form/new-award/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-form/new-card/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-form/new-chef-category/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-form/new-dish/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-form/new-post/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-form/new-product-category/component.jshint.lint-test.js","minh-ha-foods/tests/components/input-form/new-product/component.jshint.lint-test.js","minh-ha-foods/tests/components/my-application/component.jshint.lint-test.js","minh-ha-foods/tests/components/navbar-header/component.jshint.lint-test.js","minh-ha-foods/tests/components/navigation-bar/component.jshint.lint-test.js","minh-ha-foods/tests/components/product-modal/component.jshint.lint-test.js","minh-ha-foods/tests/components/render-later/component.jshint.lint-test.js","minh-ha-foods/tests/contact/model.jshint.lint-test.js","minh-ha-foods/tests/dish/model.jshint.lint-test.js","minh-ha-foods/tests/dish/serializer.jshint.lint-test.js","minh-ha-foods/tests/helpers/destroy-app.js","minh-ha-foods/tests/helpers/destroy-app.jshint.lint-test.js","minh-ha-foods/tests/helpers/ember-basic-dropdown.js","minh-ha-foods/tests/helpers/ember-keyboard/register-test-helpers.js","minh-ha-foods/tests/helpers/ember-power-select.js","minh-ha-foods/tests/helpers/ember-simple-auth.js","minh-ha-foods/tests/helpers/module-for-acceptance.js","minh-ha-foods/tests/helpers/module-for-acceptance.jshint.lint-test.js","minh-ha-foods/tests/helpers/resolver.js","minh-ha-foods/tests/helpers/resolver.jshint.lint-test.js","minh-ha-foods/tests/helpers/start-app.js","minh-ha-foods/tests/helpers/start-app.jshint.lint-test.js","minh-ha-foods/tests/history/model.jshint.lint-test.js","minh-ha-foods/tests/index/route.jshint.lint-test.js","minh-ha-foods/tests/initializers/component-router-injector.jshint.lint-test.js","minh-ha-foods/tests/initializers/text-field.jshint.lint-test.js","minh-ha-foods/tests/integration/components/admin-page/about-section/component-test.js","minh-ha-foods/tests/integration/components/admin-page/about-section/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/admin-page/product-section/component-test.js","minh-ha-foods/tests/integration/components/admin-page/product-section/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/all-forms/change-password/component-test.js","minh-ha-foods/tests/integration/components/all-forms/change-password/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/all-forms/sign-in-form/component-test.js","minh-ha-foods/tests/integration/components/all-forms/sign-in-form/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/all-forms/sign-up-form/component-test.js","minh-ha-foods/tests/integration/components/all-forms/sign-up-form/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/award-form/component-test.js","minh-ha-foods/tests/integration/components/award-form/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/banner-image/component-test.js","minh-ha-foods/tests/integration/components/banner-image/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/category-form/component-test.js","minh-ha-foods/tests/integration/components/category-form/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/hamburger-menu/component-test.js","minh-ha-foods/tests/integration/components/hamburger-menu/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/home-page/about-section/component-test.js","minh-ha-foods/tests/integration/components/home-page/about-section/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/home-page/chef-section/component-test.js","minh-ha-foods/tests/integration/components/home-page/chef-section/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/home-page/component-test.js","minh-ha-foods/tests/integration/components/home-page/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/home-page/contact-page/component-test.js","minh-ha-foods/tests/integration/components/home-page/contact-page/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/home-page/image-row/component-test.js","minh-ha-foods/tests/integration/components/home-page/image-row/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/home-page/news-section/component-test.js","minh-ha-foods/tests/integration/components/home-page/news-section/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/home-page/product-section/component-test.js","minh-ha-foods/tests/integration/components/home-page/product-section/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-fields/email-input/component-test.js","minh-ha-foods/tests/integration/components/input-fields/email-input/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-fields/password-confirmation-input/component-test.js","minh-ha-foods/tests/integration/components/input-fields/password-confirmation-input/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-fields/password-input/component-test.js","minh-ha-foods/tests/integration/components/input-fields/password-input/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-fields/section-inputs/component-test.js","minh-ha-foods/tests/integration/components/input-fields/section-inputs/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-form/component-test.js","minh-ha-foods/tests/integration/components/input-form/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-form/inputs-section/component-test.js","minh-ha-foods/tests/integration/components/input-form/inputs-section/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-form/new-award/component-test.js","minh-ha-foods/tests/integration/components/input-form/new-award/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-form/new-card/component-test.js","minh-ha-foods/tests/integration/components/input-form/new-card/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-form/new-chef-category/component-test.js","minh-ha-foods/tests/integration/components/input-form/new-chef-category/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-form/new-dish/component-test.js","minh-ha-foods/tests/integration/components/input-form/new-dish/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-form/new-post/component-test.js","minh-ha-foods/tests/integration/components/input-form/new-post/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-form/new-product-category/component-test.js","minh-ha-foods/tests/integration/components/input-form/new-product-category/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/input-form/new-product/component-test.js","minh-ha-foods/tests/integration/components/input-form/new-product/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/my-application/component-test.js","minh-ha-foods/tests/integration/components/my-application/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/navbar-header/component-test.js","minh-ha-foods/tests/integration/components/navbar-header/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/navigation-bar/component-test.js","minh-ha-foods/tests/integration/components/navigation-bar/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/product-modal/component-test.js","minh-ha-foods/tests/integration/components/product-modal/component-test.jshint.lint-test.js","minh-ha-foods/tests/integration/components/render-later/component-test.js","minh-ha-foods/tests/integration/components/render-later/component-test.jshint.lint-test.js","minh-ha-foods/tests/language-toggle/service.jshint.lint-test.js","minh-ha-foods/tests/news-post/model.jshint.lint-test.js","minh-ha-foods/tests/news-section/model.jshint.lint-test.js","minh-ha-foods/tests/product-category/model.jshint.lint-test.js","minh-ha-foods/tests/product-category/serializer.jshint.lint-test.js","minh-ha-foods/tests/product-section/model.jshint.lint-test.js","minh-ha-foods/tests/product/model.jshint.lint-test.js","minh-ha-foods/tests/product/serializer.jshint.lint-test.js","minh-ha-foods/tests/resolver.jshint.lint-test.js","minh-ha-foods/tests/router.jshint.lint-test.js","minh-ha-foods/tests/sign-in/route.jshint.lint-test.js","minh-ha-foods/tests/sign-up/route.jshint.lint-test.js","minh-ha-foods/tests/test-helper.js","minh-ha-foods/tests/test-helper.jshint.lint-test.js","minh-ha-foods/tests/toggle-lang/service.jshint.lint-test.js","minh-ha-foods/tests/unit/about-section/model-test.js","minh-ha-foods/tests/unit/about-section/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/about-sections/awards/route-test.js","minh-ha-foods/tests/unit/admin-route/about-sections/awards/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/about-sections/history/route-test.js","minh-ha-foods/tests/unit/admin-route/about-sections/history/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/about-sections/route-test.js","minh-ha-foods/tests/unit/admin-route/about-sections/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/about-sections/serializer-test.js","minh-ha-foods/tests/unit/admin-route/about-sections/serializer-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/about-sections/why-us/route-test.js","minh-ha-foods/tests/unit/admin-route/about-sections/why-us/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/chef-section/categories/route-test.js","minh-ha-foods/tests/unit/admin-route/chef-section/categories/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/chef-section/dishes/route-test.js","minh-ha-foods/tests/unit/admin-route/chef-section/dishes/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/chef-section/route-test.js","minh-ha-foods/tests/unit/admin-route/chef-section/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/contact/route-test.js","minh-ha-foods/tests/unit/admin-route/contact/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/news-section/post/route-test.js","minh-ha-foods/tests/unit/admin-route/news-section/post/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/news-section/route-test.js","minh-ha-foods/tests/unit/admin-route/news-section/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/news-section/serializer-test.js","minh-ha-foods/tests/unit/admin-route/news-section/serializer-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/product-sections/categories/route-test.js","minh-ha-foods/tests/unit/admin-route/product-sections/categories/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/product-sections/category/products/route-test.js","minh-ha-foods/tests/unit/admin-route/product-sections/category/products/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/product-sections/category/route-test.js","minh-ha-foods/tests/unit/admin-route/product-sections/category/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/product-sections/products/route-test.js","minh-ha-foods/tests/unit/admin-route/product-sections/products/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/product-sections/route-test.js","minh-ha-foods/tests/unit/admin-route/product-sections/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/admin-route/route-test.js","minh-ha-foods/tests/unit/admin-route/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/ajax/service-test.js","minh-ha-foods/tests/unit/ajax/service-test.jshint.lint-test.js","minh-ha-foods/tests/unit/application/adapter-test.js","minh-ha-foods/tests/unit/application/adapter-test.jshint.lint-test.js","minh-ha-foods/tests/unit/application/route-test.js","minh-ha-foods/tests/unit/application/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/application/serializer-test.js","minh-ha-foods/tests/unit/application/serializer-test.jshint.lint-test.js","minh-ha-foods/tests/unit/auth/service-test.js","minh-ha-foods/tests/unit/auth/service-test.jshint.lint-test.js","minh-ha-foods/tests/unit/award/model-test.js","minh-ha-foods/tests/unit/award/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/category/model-test.js","minh-ha-foods/tests/unit/category/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/change-password/route-test.js","minh-ha-foods/tests/unit/change-password/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/chef-category/model-test.js","minh-ha-foods/tests/unit/chef-category/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/chef-category/serializer-test.js","minh-ha-foods/tests/unit/chef-category/serializer-test.jshint.lint-test.js","minh-ha-foods/tests/unit/chef-dishes/route-test.js","minh-ha-foods/tests/unit/chef-dishes/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/chef-section/model-test.js","minh-ha-foods/tests/unit/chef-section/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/contact/model-test.js","minh-ha-foods/tests/unit/contact/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/dish/model-test.js","minh-ha-foods/tests/unit/dish/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/dish/serializer-test.js","minh-ha-foods/tests/unit/dish/serializer-test.jshint.lint-test.js","minh-ha-foods/tests/unit/history/model-test.js","minh-ha-foods/tests/unit/history/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/index/route-test.js","minh-ha-foods/tests/unit/index/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/language-toggle/service-test.js","minh-ha-foods/tests/unit/language-toggle/service-test.jshint.lint-test.js","minh-ha-foods/tests/unit/news-post/model-test.js","minh-ha-foods/tests/unit/news-post/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/news-section/model-test.js","minh-ha-foods/tests/unit/news-section/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/product-category/model-test.js","minh-ha-foods/tests/unit/product-category/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/product-category/serializer-test.js","minh-ha-foods/tests/unit/product-category/serializer-test.jshint.lint-test.js","minh-ha-foods/tests/unit/product-section/model-test.js","minh-ha-foods/tests/unit/product-section/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/product/model-test.js","minh-ha-foods/tests/unit/product/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/product/serializer-test.js","minh-ha-foods/tests/unit/product/serializer-test.jshint.lint-test.js","minh-ha-foods/tests/unit/sign-in/route-test.js","minh-ha-foods/tests/unit/sign-in/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/sign-up/route-test.js","minh-ha-foods/tests/unit/sign-up/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/toggle-lang/service-test.js","minh-ha-foods/tests/unit/toggle-lang/service-test.jshint.lint-test.js","minh-ha-foods/tests/unit/user/model-test.js","minh-ha-foods/tests/unit/user/model-test.jshint.lint-test.js","minh-ha-foods/tests/unit/users/route-test.js","minh-ha-foods/tests/unit/users/route-test.jshint.lint-test.js","minh-ha-foods/tests/unit/why-u/model-test.js","minh-ha-foods/tests/unit/why-u/model-test.jshint.lint-test.js","minh-ha-foods/tests/user/model.jshint.lint-test.js","minh-ha-foods/tests/users/route.jshint.lint-test.js","minh-ha-foods/tests/why-u/model.jshint.lint-test.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('minh-ha-foods/tests/about-section/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | about-section/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'about-section/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/admin-route/about-sections/awards/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/about-sections/awards/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/about-sections/awards/route.js should pass jshint.\\nadmin-route/about-sections/awards/route.js: line 12, col 16, \\'Materialize\\' is not defined.\\nadmin-route/about-sections/awards/route.js: line 15, col 16, \\'Materialize\\' is not defined.\\nadmin-route/about-sections/awards/route.js: line 23, col 16, \\'Materialize\\' is not defined.\\nadmin-route/about-sections/awards/route.js: line 26, col 16, \\'Materialize\\' is not defined.\\nadmin-route/about-sections/awards/route.js: line 33, col 16, \\'Materialize\\' is not defined.\\n\\n5 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/about-sections/history/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/about-sections/history/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/about-sections/history/route.js should pass jshint.\\nadmin-route/about-sections/history/route.js: line 15, col 16, \\'Materialize\\' is not defined.\\nadmin-route/about-sections/history/route.js: line 18, col 16, \\'Materialize\\' is not defined.\\n\\n2 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/about-sections/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/about-sections/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/about-sections/route.js should pass jshint.\\nadmin-route/about-sections/route.js: line 19, col 9, \\'Materialize\\' is not defined.\\nadmin-route/about-sections/route.js: line 22, col 9, \\'Materialize\\' is not defined.\\n\\n2 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/about-sections/serializer.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/about-sections/serializer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'admin-route/about-sections/serializer.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/admin-route/about-sections/why-us/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/about-sections/why-us/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/about-sections/why-us/route.js should pass jshint.\\nadmin-route/about-sections/why-us/route.js: line 15, col 16, \\'Materialize\\' is not defined.\\nadmin-route/about-sections/why-us/route.js: line 18, col 16, \\'Materialize\\' is not defined.\\n\\n2 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/chef-section/categories/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/chef-section/categories/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/chef-section/categories/route.js should pass jshint.\\nadmin-route/chef-section/categories/route.js: line 12, col 16, \\'Materialize\\' is not defined.\\nadmin-route/chef-section/categories/route.js: line 15, col 16, \\'Materialize\\' is not defined.\\nadmin-route/chef-section/categories/route.js: line 22, col 16, \\'Materialize\\' is not defined.\\nadmin-route/chef-section/categories/route.js: line 25, col 16, \\'Materialize\\' is not defined.\\nadmin-route/chef-section/categories/route.js: line 35, col 16, \\'Materialize\\' is not defined.\\nadmin-route/chef-section/categories/route.js: line 38, col 16, \\'Materialize\\' is not defined.\\n\\n6 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/chef-section/dishes/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/chef-section/dishes/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/chef-section/dishes/route.js should pass jshint.\\nadmin-route/chef-section/dishes/route.js: line 21, col 16, \\'Materialize\\' is not defined.\\nadmin-route/chef-section/dishes/route.js: line 27, col 16, \\'Materialize\\' is not defined.\\nadmin-route/chef-section/dishes/route.js: line 30, col 16, \\'Materialize\\' is not defined.\\nadmin-route/chef-section/dishes/route.js: line 43, col 16, \\'Materialize\\' is not defined.\\nadmin-route/chef-section/dishes/route.js: line 46, col 16, \\'Materialize\\' is not defined.\\n\\n5 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/chef-section/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/chef-section/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/chef-section/route.js should pass jshint.\\nadmin-route/chef-section/route.js: line 15, col 16, \\'Materialize\\' is not defined.\\nadmin-route/chef-section/route.js: line 18, col 16, \\'Materialize\\' is not defined.\\n\\n2 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/contact/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/contact/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/contact/route.js should pass jshint.\\nadmin-route/contact/route.js: line 15, col 9, \\'Materialize\\' is not defined.\\nadmin-route/contact/route.js: line 18, col 9, \\'Materialize\\' is not defined.\\n\\n2 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/news-section/post/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/news-section/post/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/news-section/post/route.js should pass jshint.\\nadmin-route/news-section/post/route.js: line 22, col 16, \\'Materialize\\' is not defined.\\nadmin-route/news-section/post/route.js: line 25, col 16, \\'Materialize\\' is not defined.\\nadmin-route/news-section/post/route.js: line 35, col 16, \\'Materialize\\' is not defined.\\nadmin-route/news-section/post/route.js: line 38, col 16, \\'Materialize\\' is not defined.\\n\\n4 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/news-section/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/news-section/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/news-section/route.js should pass jshint.\\nadmin-route/news-section/route.js: line 15, col 16, \\'Materialize\\' is not defined.\\nadmin-route/news-section/route.js: line 18, col 16, \\'Materialize\\' is not defined.\\n\\n2 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/news-section/serializer.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/news-section/serializer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'admin-route/news-section/serializer.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/admin-route/product-sections/categories/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/product-sections/categories/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/product-sections/categories/route.js should pass jshint.\\nadmin-route/product-sections/categories/route.js: line 12, col 16, \\'Materialize\\' is not defined.\\nadmin-route/product-sections/categories/route.js: line 15, col 16, \\'Materialize\\' is not defined.\\nadmin-route/product-sections/categories/route.js: line 22, col 16, \\'Materialize\\' is not defined.\\nadmin-route/product-sections/categories/route.js: line 25, col 16, \\'Materialize\\' is not defined.\\nadmin-route/product-sections/categories/route.js: line 35, col 16, \\'Materialize\\' is not defined.\\nadmin-route/product-sections/categories/route.js: line 38, col 16, \\'Materialize\\' is not defined.\\n\\n6 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/product-sections/category/products/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/product-sections/category/products/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'admin-route/product-sections/category/products/route.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/admin-route/product-sections/category/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/product-sections/category/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'admin-route/product-sections/category/route.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/admin-route/product-sections/products/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/product-sections/products/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/product-sections/products/route.js should pass jshint.\\nadmin-route/product-sections/products/route.js: line 23, col 16, \\'Materialize\\' is not defined.\\nadmin-route/product-sections/products/route.js: line 29, col 16, \\'Materialize\\' is not defined.\\nadmin-route/product-sections/products/route.js: line 32, col 16, \\'Materialize\\' is not defined.\\nadmin-route/product-sections/products/route.js: line 45, col 16, \\'Materialize\\' is not defined.\\nadmin-route/product-sections/products/route.js: line 48, col 16, \\'Materialize\\' is not defined.\\n\\n5 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/product-sections/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/product-sections/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'admin-route/product-sections/route.js should pass jshint.\\nadmin-route/product-sections/route.js: line 15, col 16, \\'Materialize\\' is not defined.\\nadmin-route/product-sections/route.js: line 18, col 16, \\'Materialize\\' is not defined.\\n\\n2 errors');\n  });\n});","define('minh-ha-foods/tests/admin-route/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | admin-route/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'admin-route/route.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/ajax/service.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | ajax/service.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ajax/service.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/app.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/application/adapter.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | application/adapter.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'application/adapter.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/application/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | application/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'application/route.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/application/serializer.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | application/serializer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'application/serializer.js should pass jshint.\\napplication/serializer.js: line 1, col 8, \\'Ember\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('minh-ha-foods/tests/auth/service.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | auth/service.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'auth/service.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/auth/storage.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | auth/storage.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'auth/storage.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/award/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | award/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'award/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/category/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | category/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'category/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/change-password/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | change-password/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'change-password/route.js should pass jshint.\\nchange-password/route.js: line 11, col 9, \\'Materialize\\' is not defined.\\nchange-password/route.js: line 14, col 9, \\'Materialize\\' is not defined.\\nchange-password/route.js: line 19, col 9, \\'Materialize\\' is not defined.\\n\\n3 errors');\n  });\n});","define('minh-ha-foods/tests/chef-category/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | chef-category/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'chef-category/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/chef-category/serializer.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | chef-category/serializer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'chef-category/serializer.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/chef-dishes/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | chef-dishes/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'chef-dishes/route.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/chef-section/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | chef-section/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'chef-section/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/admin-page/about-section/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/admin-page/about-section/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/admin-page/about-section/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/admin-page/product-section/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/admin-page/product-section/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/admin-page/product-section/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/all-forms/change-password/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/all-forms/change-password/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/all-forms/change-password/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/all-forms/sign-in-form/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/all-forms/sign-in-form/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/all-forms/sign-in-form/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/all-forms/sign-up-form/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/all-forms/sign-up-form/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/all-forms/sign-up-form/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/award-form/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/award-form/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/award-form/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/banner-image/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/banner-image/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/banner-image/component.js should pass jshint.\\ncomponents/banner-image/component.js: line 12, col 18, \\'lang\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('minh-ha-foods/tests/components/category-form/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/category-form/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/category-form/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/hamburger-menu/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/hamburger-menu/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/hamburger-menu/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/home-page/about-section/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/home-page/about-section/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/home-page/about-section/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/home-page/chef-section/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/home-page/chef-section/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/home-page/chef-section/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/home-page/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/home-page/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/home-page/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/home-page/contact-page/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/home-page/contact-page/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/home-page/contact-page/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/home-page/image-row/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/home-page/image-row/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/home-page/image-row/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/home-page/news-section/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/home-page/news-section/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/home-page/news-section/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/home-page/product-section/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/home-page/product-section/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/home-page/product-section/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-fields/email-input/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-fields/email-input/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-fields/email-input/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-fields/password-confirmation-input/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-fields/password-confirmation-input/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-fields/password-confirmation-input/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-fields/password-input/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-fields/password-input/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-fields/password-input/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-fields/section-inputs/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-fields/section-inputs/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-fields/section-inputs/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-form/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-form/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-form/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-form/inputs-section/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-form/inputs-section/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-form/inputs-section/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-form/new-award/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-form/new-award/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-form/new-award/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-form/new-card/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-form/new-card/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-form/new-card/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-form/new-chef-category/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-form/new-chef-category/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-form/new-chef-category/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-form/new-dish/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-form/new-dish/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-form/new-dish/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-form/new-post/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-form/new-post/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-form/new-post/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-form/new-product-category/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-form/new-product-category/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-form/new-product-category/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/input-form/new-product/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-form/new-product/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-form/new-product/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/my-application/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/my-application/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/my-application/component.js should pass jshint.\\ncomponents/my-application/component.js: line 26, col 18, \\'Materialize\\' is not defined.\\ncomponents/my-application/component.js: line 35, col 18, \\'Materialize\\' is not defined.\\n\\n2 errors');\n  });\n});","define('minh-ha-foods/tests/components/navbar-header/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/navbar-header/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/navbar-header/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/navigation-bar/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/navigation-bar/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/navigation-bar/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/product-modal/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/product-modal/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/product-modal/component.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/components/render-later/component.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | components/render-later/component.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'components/render-later/component.js should pass jshint.\\ncomponents/render-later/component.js: line 3, col 3, \\'Component\\' is defined but never used.\\n\\n1 error');\n  });\n});","define('minh-ha-foods/tests/contact/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | contact/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'contact/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/dish/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | dish/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'dish/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/dish/serializer.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | dish/serializer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'dish/serializer.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('minh-ha-foods/tests/helpers/destroy-app.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/helpers/ember-basic-dropdown', ['exports', 'ember-native-dom-helpers', 'ember-basic-dropdown/test-support/helpers'], function (exports, _emberNativeDomHelpers, _emberBasicDropdownTestSupportHelpers) {\n  exports['default'] = _emberBasicDropdownTestSupportHelpers['default'];\n  Object.defineProperty(exports, 'nativeTap', {\n    enumerable: true,\n    get: function get() {\n      return _emberBasicDropdownTestSupportHelpers.nativeTap;\n    }\n  });\n  Object.defineProperty(exports, 'clickTrigger', {\n    enumerable: true,\n    get: function get() {\n      return _emberBasicDropdownTestSupportHelpers.clickTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'tapTrigger', {\n    enumerable: true,\n    get: function get() {\n      return _emberBasicDropdownTestSupportHelpers.tapTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'fireKeydown', {\n    enumerable: true,\n    get: function get() {\n      return _emberBasicDropdownTestSupportHelpers.fireKeydown;\n    }\n  });\n  var nativeClick = _emberNativeDomHelpers.click;\n  exports.nativeClick = nativeClick;\n});","define('minh-ha-foods/tests/helpers/ember-keyboard/register-test-helpers', ['exports', 'ember', 'ember-keyboard'], function (exports, _ember, _emberKeyboard) {\n\n  var keyEvent = function keyEvent(app, attributes, type) {\n    var event = attributes.split('+').reduce(function (event, attribute) {\n      if (['ctrl', 'meta', 'alt', 'shift'].indexOf(attribute) > -1) {\n        event[attribute + 'Key'] = true;\n      } else {\n        event.keyCode = (0, _emberKeyboard.getKeyCode)(attribute);\n      }\n\n      return event;\n    }, {});\n\n    return app.testHelpers.triggerEvent(document, type, event);\n  };\n\n  exports['default'] = function () {\n    _ember['default'].Test.registerAsyncHelper('keyDown', function (app, attributes) {\n      return keyEvent(app, attributes, 'keydown');\n    });\n\n    _ember['default'].Test.registerAsyncHelper('keyUp', function (app, attributes) {\n      return keyEvent(app, attributes, 'keyup');\n    });\n\n    _ember['default'].Test.registerAsyncHelper('keyPress', function (app, attributes) {\n      return keyEvent(app, attributes, 'keypress');\n    });\n  };\n});","define('minh-ha-foods/tests/helpers/ember-power-select', ['exports', 'ember-power-select/test-support/helpers'], function (exports, _emberPowerSelectTestSupportHelpers) {\n  exports['default'] = _emberPowerSelectTestSupportHelpers['default'];\n  Object.defineProperty(exports, 'findContains', {\n    enumerable: true,\n    get: function get() {\n      return _emberPowerSelectTestSupportHelpers.findContains;\n    }\n  });\n  Object.defineProperty(exports, 'nativeMouseDown', {\n    enumerable: true,\n    get: function get() {\n      return _emberPowerSelectTestSupportHelpers.nativeMouseDown;\n    }\n  });\n  Object.defineProperty(exports, 'nativeMouseUp', {\n    enumerable: true,\n    get: function get() {\n      return _emberPowerSelectTestSupportHelpers.nativeMouseUp;\n    }\n  });\n  Object.defineProperty(exports, 'triggerKeydown', {\n    enumerable: true,\n    get: function get() {\n      return _emberPowerSelectTestSupportHelpers.triggerKeydown;\n    }\n  });\n  Object.defineProperty(exports, 'typeInSearch', {\n    enumerable: true,\n    get: function get() {\n      return _emberPowerSelectTestSupportHelpers.typeInSearch;\n    }\n  });\n  Object.defineProperty(exports, 'clickTrigger', {\n    enumerable: true,\n    get: function get() {\n      return _emberPowerSelectTestSupportHelpers.clickTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'nativeTouch', {\n    enumerable: true,\n    get: function get() {\n      return _emberPowerSelectTestSupportHelpers.nativeTouch;\n    }\n  });\n  Object.defineProperty(exports, 'touchTrigger', {\n    enumerable: true,\n    get: function get() {\n      return _emberPowerSelectTestSupportHelpers.touchTrigger;\n    }\n  });\n  Object.defineProperty(exports, 'selectChoose', {\n    enumerable: true,\n    get: function get() {\n      return _emberPowerSelectTestSupportHelpers.selectChoose;\n    }\n  });\n});","define('minh-ha-foods/tests/helpers/ember-simple-auth', ['exports', 'ember-simple-auth/authenticators/test'], function (exports, _emberSimpleAuthAuthenticatorsTest) {\n  exports.authenticateSession = authenticateSession;\n  exports.currentSession = currentSession;\n  exports.invalidateSession = invalidateSession;\n\n  var TEST_CONTAINER_KEY = 'authenticator:test';\n\n  function ensureAuthenticator(app, container) {\n    var authenticator = container.lookup(TEST_CONTAINER_KEY);\n    if (!authenticator) {\n      app.register(TEST_CONTAINER_KEY, _emberSimpleAuthAuthenticatorsTest['default']);\n    }\n  }\n\n  function authenticateSession(app, sessionData) {\n    var container = app.__container__;\n\n    var session = container.lookup('service:session');\n    ensureAuthenticator(app, container);\n    session.authenticate(TEST_CONTAINER_KEY, sessionData);\n    return wait();\n  }\n\n  function currentSession(app) {\n    return app.__container__.lookup('service:session');\n  }\n\n  function invalidateSession(app) {\n    var session = app.__container__.lookup('service:session');\n    if (session.get('isAuthenticated')) {\n      session.invalidate();\n    }\n    return wait();\n  }\n});\n/* global wait */","define('minh-ha-foods/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'minh-ha-foods/tests/helpers/start-app', 'minh-ha-foods/tests/helpers/destroy-app'], function (exports, _qunit, _minhHaFoodsTestsHelpersStartApp, _minhHaFoodsTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _minhHaFoodsTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _minhHaFoodsTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('minh-ha-foods/tests/helpers/module-for-acceptance.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/helpers/resolver', ['exports', 'minh-ha-foods/resolver', 'minh-ha-foods/config/environment'], function (exports, _minhHaFoodsResolver, _minhHaFoodsConfigEnvironment) {\n\n  var resolver = _minhHaFoodsResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _minhHaFoodsConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _minhHaFoodsConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('minh-ha-foods/tests/helpers/resolver.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/helpers/start-app', ['exports', 'ember', 'minh-ha-foods/app', 'minh-ha-foods/config/environment'], function (exports, _ember, _minhHaFoodsApp, _minhHaFoodsConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _minhHaFoodsConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _minhHaFoodsApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('minh-ha-foods/tests/helpers/start-app.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/history/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | history/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'history/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/index/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | index/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'index/route.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/initializers/component-router-injector.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | initializers/component-router-injector.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/component-router-injector.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/initializers/text-field.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | initializers/text-field.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'initializers/text-field.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/admin-page/about-section/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('admin-page/about-section', 'Integration | Component | admin page/about section', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'KawbhVR7',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"admin-page/about-section\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'IAU2uPD3',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"admin-page/about-section\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/admin-page/about-section/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/admin-page/about-section/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/admin-page/about-section/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/admin-page/product-section/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('admin-page/product-section', 'Integration | Component | admin page/product section', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'SbEeM+Sc',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"admin-page/product-section\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '6Kg30jBl',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"admin-page/product-section\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/admin-page/product-section/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/admin-page/product-section/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/admin-page/product-section/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/all-forms/change-password/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('all-forms/change-password', 'Integration | Component | all forms/change password', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'FwaTmpxp',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"all-forms/change-password\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'xMHKCTH2',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"all-forms/change-password\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/all-forms/change-password/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/all-forms/change-password/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/all-forms/change-password/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/all-forms/sign-in-form/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('all-forms/sign-in-form', 'Integration | Component | all forms/sign in form', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'pWjdzl0b',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"all-forms/sign-in-form\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '4U7Mgov+',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"all-forms/sign-in-form\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/all-forms/sign-in-form/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/all-forms/sign-in-form/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/all-forms/sign-in-form/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/all-forms/sign-up-form/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('all-forms/sign-up-form', 'Integration | Component | all forms/sign up form', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '2CEthSWK',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"all-forms/sign-up-form\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'q2DTIwhv',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"all-forms/sign-up-form\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/all-forms/sign-up-form/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/all-forms/sign-up-form/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/all-forms/sign-up-form/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/award-form/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('award-form', 'Integration | Component | award form', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'Op4Gwtyj',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"award-form\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'DIJ7yZ9C',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"award-form\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/award-form/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/award-form/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/award-form/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/banner-image/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('banner-image', 'Integration | Component | banner image', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'Yycl72gD',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"banner-image\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'c5rPa3xL',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"banner-image\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/banner-image/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/banner-image/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/banner-image/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/category-form/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('category-form', 'Integration | Component | category form', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'WyU9jpLT',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"category-form\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'ejTIBtlv',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"category-form\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/category-form/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/category-form/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/category-form/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/hamburger-menu/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('hamburger-menu', 'Integration | Component | hamburger menu', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '6jCz0Egi',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"hamburger-menu\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '+8WkWzqb',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"hamburger-menu\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/hamburger-menu/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/hamburger-menu/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/hamburger-menu/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/about-section/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('home-page/about-section', 'Integration | Component | home page/about section', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'SbQ3IJ58',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"home-page/about-section\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'n7KELIWv',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"home-page/about-section\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/about-section/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/home-page/about-section/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/home-page/about-section/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/chef-section/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('home-page/chef-section', 'Integration | Component | home page/chef section', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'L4pEf8dA',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"home-page/chef-section\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'PtPFET1X',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"home-page/chef-section\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/chef-section/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/home-page/chef-section/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/home-page/chef-section/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('home-page', 'Integration | Component | home page', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'IRKRQYaB',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"home-page\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'FcQQahHY',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"home-page\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/home-page/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/home-page/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/contact-page/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('home-page/contact-page', 'Integration | Component | home page/contact page', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'gZaSMPDZ',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"home-page/contact-page\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'LHMdyCt5',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"home-page/contact-page\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/contact-page/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/home-page/contact-page/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/home-page/contact-page/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/image-row/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('home-page/image-row', 'Integration | Component | home page/image row', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '2m+HpyRq',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"home-page/image-row\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'lLcA2n4X',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"home-page/image-row\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/image-row/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/home-page/image-row/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/home-page/image-row/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/news-section/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('home-page/news-section', 'Integration | Component | home page/news section', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'HV+m28sw',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"home-page/news-section\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'v/pZFi7J',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"home-page/news-section\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/news-section/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/home-page/news-section/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/home-page/news-section/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/product-section/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('home-page/product-section', 'Integration | Component | home page/product section', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '7g0jNghz',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"home-page/product-section\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'DLaU3Hal',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"home-page/product-section\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/home-page/product-section/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/home-page/product-section/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/home-page/product-section/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-fields/email-input/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-fields/email-input', 'Integration | Component | input fields/email input', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '+drlM10n',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-fields/email-input\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'iP4b9epw',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-fields/email-input\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-fields/email-input/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-fields/email-input/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-fields/email-input/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-fields/password-confirmation-input/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-fields/password-confirmation-input', 'Integration | Component | input fields/password confirmation input', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'nrEidrYv',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-fields/password-confirmation-input\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'KWEkqp8M',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-fields/password-confirmation-input\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-fields/password-confirmation-input/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-fields/password-confirmation-input/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-fields/password-confirmation-input/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-fields/password-input/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-fields/password-input', 'Integration | Component | input fields/password input', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'DsYzW6VH',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-fields/password-input\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'O3VKyMHX',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-fields/password-input\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-fields/password-input/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-fields/password-input/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-fields/password-input/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-fields/section-inputs/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-fields/section-inputs', 'Integration | Component | input fields/section inputs', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'HkUrnita',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-fields/section-inputs\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'gdk9VOzF',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-fields/section-inputs\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-fields/section-inputs/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-fields/section-inputs/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-fields/section-inputs/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-form', 'Integration | Component | input form', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'X5EvtkuD',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-form\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '7m34mSGE',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-form\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-form/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-form/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/inputs-section/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-form/inputs-section', 'Integration | Component | input form/inputs section', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'nfHKr4vP',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-form/inputs-section\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'TgaWPuC6',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-form/inputs-section\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/inputs-section/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-form/inputs-section/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-form/inputs-section/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-award/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-form/new-award', 'Integration | Component | input form/new award', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'nsPfKKU0',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-form/new-award\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'Jq1KPBQv',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-form/new-award\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-award/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-form/new-award/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-form/new-award/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-card/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-form/new-card', 'Integration | Component | input form/new card', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'e3VnrA6q',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-form/new-card\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'XptAZUg6',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-form/new-card\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-card/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-form/new-card/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-form/new-card/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-chef-category/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-form/new-chef-category', 'Integration | Component | input form/new chef category', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'jibPEg+T',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-form/new-chef-category\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'ymYHcIe0',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-form/new-chef-category\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-chef-category/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-form/new-chef-category/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-form/new-chef-category/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-dish/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-form/new-dish', 'Integration | Component | input form/new dish', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'KCDLn2H0',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-form/new-dish\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '5AGEkxPY',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-form/new-dish\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-dish/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-form/new-dish/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-form/new-dish/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-post/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-form/new-post', 'Integration | Component | input form/new post', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '8f85CyS6',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-form/new-post\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': '/dKebFgU',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-form/new-post\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-post/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-form/new-post/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-form/new-post/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-product-category/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-form/new-product-category', 'Integration | Component | input form/new product category', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'durSfVPI',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-form/new-product-category\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'dUGDgv7a',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-form/new-product-category\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-product-category/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-form/new-product-category/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-form/new-product-category/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-product/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('input-form/new-product', 'Integration | Component | input form/new product', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'WRp5qhWr',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"input-form/new-product\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'knSgQd4Q',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"input-form/new-product\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/input-form/new-product/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/input-form/new-product/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/input-form/new-product/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/my-application/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('my-application', 'Integration | Component | my application', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'KxgFQCKC',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"my-application\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'kguz0DrD',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"my-application\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/my-application/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/my-application/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/my-application/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/navbar-header/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('navbar-header', 'Integration | Component | navbar header', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'jsAxs+PS',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"navbar-header\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'UCOelAVk',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"navbar-header\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/navbar-header/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/navbar-header/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/navbar-header/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/navigation-bar/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('navigation-bar', 'Integration | Component | navigation bar', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'WXsezZjF',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"navigation-bar\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'BLEpbe1J',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"navigation-bar\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/navigation-bar/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/navigation-bar/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/navigation-bar/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/product-modal/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('product-modal', 'Integration | Component | product modal', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': '3pJXnDKV',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"product-modal\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'GB/vvisJ',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"product-modal\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/product-modal/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/product-modal/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/product-modal/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/integration/components/render-later/component-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('render-later', 'Integration | Component | render later', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template({\n      'id': 'wBR95Emd',\n      'block': '{\"statements\":[[\"append\",[\"unknown\",[\"render-later\"]],false]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template({\n      'id': 'K6LjXr5o',\n      'block': '{\"statements\":[[\"text\",\"\\\\n\"],[\"block\",[\"render-later\"],null,null,0],[\"text\",\"  \"]],\"locals\":[],\"named\":[],\"yields\":[],\"blocks\":[{\"statements\":[[\"text\",\"      template block text\\\\n\"]],\"locals\":[]}],\"hasPartials\":false}',\n      'meta': {}\n    }));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('minh-ha-foods/tests/integration/components/render-later/component-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/render-later/component-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/render-later/component-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/language-toggle/service.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | language-toggle/service.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'language-toggle/service.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/news-post/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | news-post/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'news-post/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/news-section/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | news-section/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'news-section/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/product-category/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | product-category/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'product-category/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/product-category/serializer.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | product-category/serializer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'product-category/serializer.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/product-section/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | product-section/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'product-section/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/product/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | product/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'product/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/product/serializer.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | product/serializer.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'product/serializer.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/resolver.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/router.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/sign-in/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | sign-in/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'sign-in/route.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/sign-up/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | sign-up/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'sign-up/route.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/test-helper', ['exports', 'minh-ha-foods/tests/helpers/resolver', 'ember-qunit'], function (exports, _minhHaFoodsTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_minhHaFoodsTestsHelpersResolver['default']);\n});","define('minh-ha-foods/tests/test-helper.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/toggle-lang/service.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | toggle-lang/service.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'toggle-lang/service.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/about-section/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('about-section', 'Unit | Model | about section', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/about-section/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/about-section/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/about-section/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/about-sections/awards/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/about-sections/awards', 'Unit | Route | admin route/about sections/awards', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/about-sections/awards/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/about-sections/awards/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/about-sections/awards/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/about-sections/history/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/about-sections/history', 'Unit | Route | admin route/about sections/history', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/about-sections/history/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/about-sections/history/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/about-sections/history/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/about-sections/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/about-sections', 'Unit | Route | admin route/about sections', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/about-sections/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/about-sections/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/about-sections/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/about-sections/serializer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('admin-route/about-sections', 'Unit | Serializer | admin route/about sections', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:admin-route/about-sections']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/about-sections/serializer-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/about-sections/serializer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/about-sections/serializer-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/about-sections/why-us/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/about-sections/why-us', 'Unit | Route | admin route/about sections/why us', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/about-sections/why-us/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/about-sections/why-us/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/about-sections/why-us/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/chef-section/categories/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/chef-section/categories', 'Unit | Route | admin route/chef section/categories', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/chef-section/categories/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/chef-section/categories/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/chef-section/categories/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/chef-section/dishes/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/chef-section/dishes', 'Unit | Route | admin route/chef section/dishes', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/chef-section/dishes/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/chef-section/dishes/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/chef-section/dishes/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/chef-section/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/chef-section', 'Unit | Route | admin route/chef section', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/chef-section/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/chef-section/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/chef-section/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/contact/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/contact', 'Unit | Route | admin route/contact', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/contact/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/contact/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/contact/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/news-section/post/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/news-section/post', 'Unit | Route | admin route/news section/post', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/news-section/post/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/news-section/post/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/news-section/post/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/news-section/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/news-section', 'Unit | Route | admin route/news section', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/news-section/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/news-section/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/news-section/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/news-section/serializer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('admin-route/news-section', 'Unit | Serializer | admin route/news section', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:admin-route/news-section']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/news-section/serializer-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/news-section/serializer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/news-section/serializer-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/product-sections/categories/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/product-sections/categories', 'Unit | Route | admin route/product sections/categories', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/product-sections/categories/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/product-sections/categories/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/product-sections/categories/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/product-sections/category/products/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/product-sections/category/products', 'Unit | Route | admin route/product sections/category/products', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/product-sections/category/products/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/product-sections/category/products/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/product-sections/category/products/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/product-sections/category/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/product-sections/category', 'Unit | Route | admin route/product sections/category', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/product-sections/category/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/product-sections/category/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/product-sections/category/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/product-sections/products/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/product-sections/products', 'Unit | Route | admin route/product sections/products', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/product-sections/products/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/product-sections/products/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/product-sections/products/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/product-sections/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route/product-sections', 'Unit | Route | admin route/product sections', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/product-sections/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/product-sections/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/product-sections/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:admin-route', 'Unit | Route | admin route', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/admin-route/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/admin-route/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/admin-route/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/ajax/service-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:ajax', 'Unit | Service | ajax', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('minh-ha-foods/tests/unit/ajax/service-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/ajax/service-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/ajax/service-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/application/adapter-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('adapter:application', 'Unit | Adapter | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['serializer:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var adapter = this.subject();\n    assert.ok(adapter);\n  });\n});","define('minh-ha-foods/tests/unit/application/adapter-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/application/adapter-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/application/adapter-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/application/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:application', 'Unit | Route | application', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/application/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/application/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/application/route-test.js should pass jshint.');\n  });\n});","define(\"minh-ha-foods/tests/unit/application/serializer-test\", [\"exports\"], function (exports) {});","define('minh-ha-foods/tests/unit/application/serializer-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/application/serializer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/application/serializer-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/auth/service-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:auth', 'Unit | Service | auth', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('minh-ha-foods/tests/unit/auth/service-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/auth/service-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/auth/service-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/award/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('award', 'Unit | Model | award', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/award/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/award/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/award/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/category/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('category', 'Unit | Model | category', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/category/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/category/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/category/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/change-password/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:change-password', 'Unit | Route | change password', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/change-password/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/change-password/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/change-password/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/chef-category/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('chef-category', 'Unit | Model | chef category', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/chef-category/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/chef-category/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/chef-category/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/chef-category/serializer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('chef-category', 'Unit | Serializer | chef category', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:chef-category']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('minh-ha-foods/tests/unit/chef-category/serializer-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/chef-category/serializer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/chef-category/serializer-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/chef-dishes/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:chef-dishes', 'Unit | Route | chef dishes', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/chef-dishes/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/chef-dishes/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/chef-dishes/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/chef-section/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('chef-section', 'Unit | Model | chef section', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/chef-section/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/chef-section/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/chef-section/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/contact/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('contact', 'Unit | Model | contact', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/contact/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/contact/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/contact/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/dish/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('dish', 'Unit | Model | dish', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/dish/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/dish/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/dish/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/dish/serializer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('dish', 'Unit | Serializer | dish', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:dish']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('minh-ha-foods/tests/unit/dish/serializer-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/dish/serializer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/dish/serializer-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/history/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('history', 'Unit | Model | history', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/history/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/history/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/history/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/index/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/index/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/index/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/index/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/language-toggle/service-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:language-toggle', 'Unit | Service | language toggle', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('minh-ha-foods/tests/unit/language-toggle/service-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/language-toggle/service-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/language-toggle/service-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/news-post/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('news-post', 'Unit | Model | news post', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/news-post/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/news-post/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/news-post/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/news-section/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('news-section', 'Unit | Model | news section', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/news-section/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/news-section/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/news-section/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/product-category/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('product-category', 'Unit | Model | product category', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/product-category/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/product-category/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/product-category/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/product-category/serializer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('product-category', 'Unit | Serializer | product category', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:product-category']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('minh-ha-foods/tests/unit/product-category/serializer-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/product-category/serializer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/product-category/serializer-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/product-section/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('product-section', 'Unit | Model | product section', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/product-section/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/product-section/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/product-section/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/product/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('product', 'Unit | Model | product', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/product/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/product/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/product/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/product/serializer-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('product', 'Unit | Serializer | product', {\n    // Specify the other units that are required for this test.\n    needs: ['serializer:product']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it serializes records', function (assert) {\n    var record = this.subject();\n\n    var serializedRecord = record.serialize();\n\n    assert.ok(serializedRecord);\n  });\n});","define('minh-ha-foods/tests/unit/product/serializer-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/product/serializer-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/product/serializer-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/sign-in/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:sign-in', 'Unit | Route | sign in', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/sign-in/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/sign-in/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/sign-in/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/sign-up/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:sign-up', 'Unit | Route | sign up', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/sign-up/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/sign-up/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/sign-up/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/toggle-lang/service-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('service:toggle-lang', 'Unit | Service | toggle lang', {\n    // Specify the other units that are required for this test.\n    // needs: ['service:foo']\n  });\n\n  // Replace this with your real tests.\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var service = this.subject();\n    assert.ok(service);\n  });\n});","define('minh-ha-foods/tests/unit/toggle-lang/service-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/toggle-lang/service-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/toggle-lang/service-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/user/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('user', 'Unit | Model | user', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/user/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/user/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/user/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/users/route-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:users', 'Unit | Route | users', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minh-ha-foods/tests/unit/users/route-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/users/route-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/users/route-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/unit/why-u/model-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForModel)('why-u', 'Unit | Model | why u', {\n    // Specify the other units that are required for this test.\n    needs: []\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var model = this.subject();\n    // let store = this.store();\n    assert.ok(!!model);\n  });\n});","define('minh-ha-foods/tests/unit/why-u/model-test.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | unit/why-u/model-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/why-u/model-test.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/user/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | user/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'user/model.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/users/route.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | users/route.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'users/route.js should pass jshint.');\n  });\n});","define('minh-ha-foods/tests/why-u/model.jshint.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('JSHint | why-u/model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'why-u/model.js should pass jshint.');\n  });\n});","require('minh-ha-foods/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdddA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;","file":"tests.js"}